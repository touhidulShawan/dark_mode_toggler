{"version":3,"sources":["context/ThemeContext.tsx","components/ToggleButton.tsx","App.tsx","index.tsx"],"names":["ThemeContext","React","dark","toggleTheme","useTheme","useContext","ThemeProvider","children","useState","setDark","console","log","Provider","value","prevState","ToggleButton","theme","className","type","onChange","App","defaultStyle","height","display","flexDirection","justifyContent","alignItems","backgroundColor","color","style","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+KAQMA,EAAeC,gBAAkC,CACrDC,MAAM,EACNC,YAAa,eAGFC,EAAW,WACtB,OAAOC,qBAAWL,IAGPM,EAA0B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAC/BC,oBAAkB,GADa,mBAChDN,EADgD,KAC1CO,EAD0C,KAOvD,OADAC,QAAQC,IAAI,qBAAuBT,GAEjC,gBAACF,EAAaY,SAAd,CAAuBC,MAAO,CAAEX,OAAMC,YALpB,WAClBM,GAAQ,SAACK,GAAD,OAAyBA,QAK9BP,ICVQQ,G,KAZgB,WAC7B,IAAMC,EAAQZ,IACd,OACE,2BACE,yBAAOa,UAAU,UACf,yBAAOC,KAAK,WAAWC,SAAUH,EAAMb,cACvC,wBAAMc,UAAU,qBCgBTG,EAtBO,WACpB,IAAMJ,EAAQZ,IAERiB,EAAoC,CACxCC,OAAQ,QACRC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,SACZC,gBAAiBX,EAAMd,KAAO,UAAY,UAC1C0B,MAAOZ,EAAMd,KAAO,UAAY,WAGlC,OACE,wBAAM2B,MAAOR,GAEX,gBAAC,EAAD,MACCL,EAAMd,KAAO,+CAA6B,kDChBjD4B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,U","file":"static/js/main.ce0495ff.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { useState, useContext } from \"react\";\n\ninterface ContextProps {\n  dark: boolean;\n  toggleTheme: () => void;\n}\n\nconst ThemeContext = React.createContext<ContextProps>({\n  dark: false,\n  toggleTheme: function toggleTheme(): void {},\n});\n\nexport const useTheme = () => {\n  return useContext(ThemeContext);\n};\n\nexport const ThemeProvider: React.FC = ({ children }) => {\n  const [dark, setDark] = useState<boolean>(false);\n\n  const toggleTheme = () => {\n    setDark((prevState: boolean) => !prevState);\n  };\n  console.log(\"from ThemeProvider\" + dark);\n  return (\n    <ThemeContext.Provider value={{ dark, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n","import * as React from \"react\";\nimport { useTheme } from \"../context/ThemeContext\";\nimport \"./ToggleButton.css\";\n\nconst ToggleButton: React.FC = () => {\n  const theme = useTheme();\n  return (\n    <div>\n      <label className=\"switch\">\n        <input type=\"checkbox\" onChange={theme.toggleTheme} />\n        <span className=\"slider round\"></span>\n      </label>\n    </div>\n  );\n};\n\nexport default ToggleButton;\n","import * as React from \"react\";\nimport ToggleButton from \"./components/ToggleButton\";\nimport { ThemeProvider, useTheme } from \"./context/ThemeContext\";\n\nconst App: React.FC = () => {\n  const theme = useTheme();\n\n  const defaultStyle: React.CSSProperties = {\n    height: \"100vh\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: theme.dark ? \"#1A202C\" : \"#EDF2F7\",\n    color: theme.dark ? \"#E2E8F0\" : \"#4A5568\",\n  };\n\n  return (\n    <main style={defaultStyle}>\n      {/* toggler component  */}\n      <ToggleButton />\n      {theme.dark ? <h1>It`s a dark theme</h1> : <h1>it`s a light theme</h1>}\n    </main>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { ThemeProvider } from \"./context/ThemeContext\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}